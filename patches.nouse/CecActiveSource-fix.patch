commit 5e1284136211e73df6468842e6130cce2ef94e23
Author: Matus Kral <matuskral@me.com>
Date:   Wed Aug 04 00:35:47 2014 +0200

  this fixes race condition upon CEC init making XBMC become active source not successfully

--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
@@ -332,8 +337,6 @@ bool CPeripheralCecAdapter::OpenConnection(void)
       if (!bConnectionFailedDisplayed)
         CGUIDialogKaiToast::QueueNotification(CGUIDialogKaiToast::Error, g_localizeStrings.Get(36000), g_localizeStrings.Get(36012));
       bConnectionFailedDisplayed = true;
-
-      Sleep(10000);
     }
   }
 
@@ -1458,10 +1472,12 @@ bool CPeripheralCecAdapterUpdateThread::WaitReady(void)
 
   // wait for the TV if we're configured to become the active source.
   // wait for the first device in the wake list otherwise.
-  cec_logical_address waitFor = (m_configuration.bActivateSource == 1) ?
+  cec_logical_address waitFor = (m_configuration.bActivateSource == 1 && !m_adapter->m_bActiveSourcePending) ?
       CECDEVICE_TV :
       m_configuration.wakeDevices.primary;
 
+  m_adapter->ProcessActivateSource();
+
   cec_power_status powerStatus(CEC_POWER_STATUS_UNKNOWN);
   bool bContinue(true);
   while (bContinue && !m_adapter->m_bStop && !m_bStop && powerStatus != CEC_POWER_STATUS_ON)
@@ -1522,32 +1538,46 @@ CStdString CPeripheralCecAdapterUpdateThread::UpdateAudioSystemStatus(void)
 
 bool CPeripheralCecAdapterUpdateThread::SetInitialConfiguration(void)
 {
-  // the option to make XBMC the active source is set
-  if (m_configuration.bActivateSource == 1)
-    m_adapter->m_cecAdapter->SetActiveSource();
-
   // devices to wake are set
   cec_logical_addresses tvOnly;
   tvOnly.Clear(); tvOnly.Set(CECDEVICE_TV);
   if (!m_configuration.wakeDevices.IsEmpty() && (m_configuration.wakeDevices != tvOnly || m_configuration.bActivateSource == 0))
+  {
     m_adapter->m_cecAdapter->PowerOnDevices(CECDEVICE_BROADCAST);
+    // wait until devices are powered up
+    if (!WaitReady())
+      return false;
+  }
 
-  // wait until devices are powered up
-  if (!WaitReady())
-    return false;
+  CStdString strNotification;
+  CStdString strAmpName = UpdateAudioSystemStatus();
+  if (!strAmpName.empty())
+    strNotification += StringUtils::Format("- %s", strAmpName.c_str());
 
   UpdateMenuLanguage();
 
   // request the OSD name of the TV
-  CStdString strNotification;
   cec_osd_name tvName = m_adapter->m_cecAdapter->GetDeviceOSDName(CECDEVICE_TV);
   strNotification = StringUtils::Format("%s: %s", g_localizeStrings.Get(36016).c_str(), tvName.name);
 
-  CStdString strAmpName = UpdateAudioSystemStatus();
-  if (!strAmpName.empty())
-    strNotification += StringUtils::Format("- %s", strAmpName.c_str());
-
   m_adapter->m_bIsReady = true;
+  if (m_configuration.bActivateSource == 1)
+  {
+    /*if (m_configuration.bActivateSource == 1 && m_adapter->m_cecAdapter->IsActiveDevice(CECDEVICE_TV))
+      m_adapter->m_cecAdapter->SetMenuState(CEC_MENU_STATE_DEACTIVATED, false);*/
+
+    m_adapter->ActivateSource();
+    // wait until TV are powered up
+    if (!WaitReady())
+      return false;
+
+    // wait until we get active source
+    bool bContinue(false);
+
+    while (!m_adapter->m_cecAdapter->IsLibCECActiveSource() && 
+           bContinue)
+      bContinue = !m_event.WaitMSec(10000);
+  }
 
   // and let the gui know that we're done
   CGUIDialogKaiToast::QueueNotification(CGUIDialogKaiToast::Info, g_localizeStrings.Get(36000), strNotification);
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
@@ -387,7 +387,7 @@
       ProcessStandbyDevices();
 
     if (!m_bStop)
-      Sleep(5);
+      Sleep(50);
   }
 
   m_queryThread->StopThread(true);
