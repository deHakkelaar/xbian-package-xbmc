#!/bin/bash

if [[ $1 == "configure" ]]; then
	
        mkdir -p /home/xbian/run_on_reboot
        
cat <<\EOF > /home/xbian/run_on_reboot/xbian-xbmc-db-update.sh
#!/bin/bash

checkdb() {
    cd /home/xbian/.xbmc/userdata/Database
    for f in $(ls); do
	diff -q /home/xbian/.xbmc/userdata/Database/$f /home/xbian/.xbmc/userdata/Database.old/$f
	[ "$?" -eq 0 ] || return 1
    done
    return 0
}

# set noCoW flag for database files
mv /home/xbian/.xbmc/userdata/Database /home/xbian/.xbmc/userdata/Database.old
mkdir /home/xbian/.xbmc/userdata/Database
chattr +C /home/xbian/.xbmc/userdata/Database
cp -r /home/xbian/.xbmc/userdata/Database.old/* /home/xbian/.xbmc/userdata/Database
if checkdb; then
    rm -fr /home/xbian/.xbmc/userdata/Database.old
    chown -Rc xbian:xbian /home/xbian/.xbmc/userdata/Database > /dev/null
else
    rm -fr /home/xbian/.xbmc/userdata/Database
    mv /home/xbian/.xbmc/userdata/Database.old /home/xbian/.xbmc/userdata/Database
    exit 1
fi

exit 0

EOF
        chmod +x /home/xbian/run_on_reboot/xbian-xbmc-db-update.sh

	initctl reload-configuration
	insserv -r /etc/init.d/xbmc > /dev/null 2>&1

	dpkg-trigger --no-await trigger-xbian-package-xbmc

        pgrep xbmc.bin >/dev/null && { touch /var/run/reboot-required; exit 0; }
        
        /home/xbian/run_on_reboot/xbian-xbmc-db-update.sh && rm -f /home/xbian/run_on_reboot/xbian-xbmc-db-update.sh

elif [ $1 = triggered ]; then

    :
#        if [ -f "/tmp/startxbmc" ]; then
#                [ -e /etc/init/xbmc.conf ] || service xbmc start > /dev/null 2>&1
#                [ -e /etc/init/xbmc.conf ] && start -n xbmc
#                rm /tmp/startxbmc
#        fi

fi
